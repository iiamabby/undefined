{"ast":null,"code":"var _jsxFileName = \"/Users/abdabthecreator/Documents/undefined-app/src/components/PreDefinedPath.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PreDefinedPath = ({\n  pathways\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [list, setList] = useState(pathways[id].steps); // Initialize list state\n\n  const dragItem = useRef();\n  const dragOverItem = useRef();\n  const dragStart = (e, position) => {\n    dragItem.current = position;\n    console.log(e.target.innerHTML);\n  };\n  const dragEnter = (e, position) => {\n    dragOverItem.current = position;\n    console.log(e.target.innerHTML);\n  };\n  const drop = e => {\n    const copyListItems = [...list]; // Use the list state instead of pathways[id].steps\n    const dragItemContent = copyListItems[dragItem.current];\n    copyListItems.splice(dragItem.current, 1);\n    copyListItems.splice(dragOverItem.current, 0, dragItemContent);\n    dragItem.current = null;\n    dragOverItem.current = null;\n    setList(copyListItems); // Update the list state\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: list.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n      onDragStart: e => dragStart(e, index),\n      onDragEnter: e => dragEnter(e, index),\n      onDragEnd: drop,\n      draggable: true,\n      children: item.content\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(PreDefinedPath, \"1Z4UpDT/mpIIhR+WYXX2ZJQauTU=\", false, function () {\n  return [useParams];\n});\n_c = PreDefinedPath;\nexport default PreDefinedPath;\nvar _c;\n$RefreshReg$(_c, \"PreDefinedPath\");","map":{"version":3,"names":["React","useState","useRef","Container","Typography","List","ListItem","ListItemText","Divider","useParams","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","PreDefinedPath","pathways","_s","id","list","setList","steps","dragItem","dragOverItem","dragStart","e","position","current","console","log","target","innerHTML","dragEnter","drop","copyListItems","dragItemContent","splice","children","map","item","index","onDragStart","onDragEnter","onDragEnd","draggable","content","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abdabthecreator/Documents/undefined-app/src/components/PreDefinedPath.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst PreDefinedPath = ({ pathways }) => {\n  const { id } = useParams()\n  const [list, setList] = useState(pathways[id].steps); // Initialize list state\n\n  const dragItem = useRef();\n  const dragOverItem = useRef();\n\n  const dragStart = (e, position) => {\n    dragItem.current = position;\n    console.log(e.target.innerHTML);\n  };\n \n  const dragEnter = (e, position) => {\n    dragOverItem.current = position;\n    console.log(e.target.innerHTML);\n  };\n  \n  const drop = (e) => {\n    const copyListItems = [...list]; // Use the list state instead of pathways[id].steps\n    const dragItemContent = copyListItems[dragItem.current];\n    copyListItems.splice(dragItem.current, 1);\n    copyListItems.splice(dragOverItem.current, 0, dragItemContent);\n    dragItem.current = null;\n    dragOverItem.current = null;\n    setList(copyListItems); // Update the list state\n  };\n\n  return (\n    <>\n      {list.map((item, index) => (\n        <ListItem\n          key={item.id}\n         \n          onDragStart={(e) => dragStart(e, index)}\n          onDragEnter={(e) => dragEnter(e, index)}\n          onDragEnd={drop}\n          draggable\n        >\n          {item.content}\n        </ListItem>\n      ))}\n    </>\n  );\n};\n\nexport default PreDefinedPath;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,SAAS,EAAEC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AAC5F,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5E,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAG,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAACiB,QAAQ,CAACE,EAAE,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC;;EAEtD,MAAMC,QAAQ,GAAGtB,MAAM,CAAC,CAAC;EACzB,MAAMuB,YAAY,GAAGvB,MAAM,CAAC,CAAC;EAE7B,MAAMwB,SAAS,GAAGA,CAACC,CAAC,EAAEC,QAAQ,KAAK;IACjCJ,QAAQ,CAACK,OAAO,GAAGD,QAAQ;IAC3BE,OAAO,CAACC,GAAG,CAACJ,CAAC,CAACK,MAAM,CAACC,SAAS,CAAC;EACjC,CAAC;EAED,MAAMC,SAAS,GAAGA,CAACP,CAAC,EAAEC,QAAQ,KAAK;IACjCH,YAAY,CAACI,OAAO,GAAGD,QAAQ;IAC/BE,OAAO,CAACC,GAAG,CAACJ,CAAC,CAACK,MAAM,CAACC,SAAS,CAAC;EACjC,CAAC;EAED,MAAME,IAAI,GAAIR,CAAC,IAAK;IAClB,MAAMS,aAAa,GAAG,CAAC,GAAGf,IAAI,CAAC,CAAC,CAAC;IACjC,MAAMgB,eAAe,GAAGD,aAAa,CAACZ,QAAQ,CAACK,OAAO,CAAC;IACvDO,aAAa,CAACE,MAAM,CAACd,QAAQ,CAACK,OAAO,EAAE,CAAC,CAAC;IACzCO,aAAa,CAACE,MAAM,CAACb,YAAY,CAACI,OAAO,EAAE,CAAC,EAAEQ,eAAe,CAAC;IAC9Db,QAAQ,CAACK,OAAO,GAAG,IAAI;IACvBJ,YAAY,CAACI,OAAO,GAAG,IAAI;IAC3BP,OAAO,CAACc,aAAa,CAAC,CAAC,CAAC;EAC1B,CAAC;;EAED,oBACEtB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,EACGlB,IAAI,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpB5B,OAAA,CAACR,QAAQ;MAGPqC,WAAW,EAAGhB,CAAC,IAAKD,SAAS,CAACC,CAAC,EAAEe,KAAK,CAAE;MACxCE,WAAW,EAAGjB,CAAC,IAAKO,SAAS,CAACP,CAAC,EAAEe,KAAK,CAAE;MACxCG,SAAS,EAAEV,IAAK;MAChBW,SAAS;MAAAP,QAAA,EAERE,IAAI,CAACM;IAAO,GAPRN,IAAI,CAACrB,EAAE;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQJ,CACX;EAAC,gBACF,CAAC;AAEP,CAAC;AAAChC,EAAA,CA3CIF,cAAc;EAAA,QACHR,SAAS;AAAA;AAAA2C,EAAA,GADpBnC,cAAc;AA6CpB,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}