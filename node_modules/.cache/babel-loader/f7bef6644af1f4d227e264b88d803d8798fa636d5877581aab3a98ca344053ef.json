{"ast":null,"code":"var _jsxFileName = \"/Users/abdabthecreator/Documents/undefined-app/src/components/PreDefinedPath.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, Divider, Paper } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport Draggable from 'react-draggable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreDefinedPath = ({\n  pathways\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [reorderedSteps, setReorderedSteps] = useState(pathways[id].steps);\n  const onDragEnd = (result, stepIndex) => {\n    if (!result || !result.x || !result.y) return;\n\n    // Calculate the position of the dropped item\n    const itemPositionX = result.x;\n    const itemPositionY = result.y;\n\n    // Calculate the target position (you can define your own logic here)\n    const targetX = 100; // Example: X-coordinate where you want the item to snap\n    const targetY = 100; // Example: Y-coordinate where you want the item to snap\n\n    // Check if the item is close enough to the target position\n    const isCloseEnough = Math.abs(itemPositionX - targetX) < 50 && Math.abs(itemPositionY - targetY) < 50;\n    if (isCloseEnough) {\n      // Snap the item to the target position\n      const newSteps = [...reorderedSteps];\n      newSteps[stepIndex] = reorderedSteps[stepIndex]; // Replace with your logic\n      setReorderedSteps(newSteps);\n    }\n  };\n  if (!pathways[id]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Pathway not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: [pathways[id].title, \" Pathway\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: reorderedSteps.map((step, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        onStop: (event, data) => onDragEnd(data, index),\n        defaultPosition: {\n          x: 0,\n          y: 0\n        } // Adjust as needed\n        ,\n        grid: [10, 10] // Adjust the grid size for snapping\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            style: {\n              padding: '8px',\n              marginBottom: '8px'\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${index + 1}. ${step}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PreDefinedPath, \"3nAgi3DCWkqK9tEo/VxWUGqhoMA=\", false, function () {\n  return [useParams];\n});\n_c = PreDefinedPath;\nexport default PreDefinedPath;\nvar _c;\n$RefreshReg$(_c, \"PreDefinedPath\");","map":{"version":3,"names":["React","useState","Container","Typography","List","ListItem","ListItemText","Divider","Paper","useParams","Draggable","jsxDEV","_jsxDEV","PreDefinedPath","pathways","_s","id","reorderedSteps","setReorderedSteps","steps","onDragEnd","result","stepIndex","x","y","itemPositionX","itemPositionY","targetX","targetY","isCloseEnough","Math","abs","newSteps","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","title","map","step","index","onStop","event","data","defaultPosition","grid","elevation","style","padding","marginBottom","primary","_c","$RefreshReg$"],"sources":["/Users/abdabthecreator/Documents/undefined-app/src/components/PreDefinedPath.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, Divider, Paper } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport Draggable from 'react-draggable';\n\nconst PreDefinedPath = ({ pathways }) => {\n  const { id } = useParams();\n  const [reorderedSteps, setReorderedSteps] = useState(pathways[id].steps);\n\n  const onDragEnd = (result, stepIndex) => {\n    if (!result || !result.x || !result.y) return;\n\n    // Calculate the position of the dropped item\n    const itemPositionX = result.x;\n    const itemPositionY = result.y;\n\n    // Calculate the target position (you can define your own logic here)\n    const targetX = 100; // Example: X-coordinate where you want the item to snap\n    const targetY = 100; // Example: Y-coordinate where you want the item to snap\n\n    // Check if the item is close enough to the target position\n    const isCloseEnough =\n      Math.abs(itemPositionX - targetX) < 50 && Math.abs(itemPositionY - targetY) < 50;\n\n    if (isCloseEnough) {\n      // Snap the item to the target position\n      const newSteps = [...reorderedSteps];\n      newSteps[stepIndex] = reorderedSteps[stepIndex]; // Replace with your logic\n      setReorderedSteps(newSteps);\n    }\n  };\n\n  if (!pathways[id]) {\n    return <div>Pathway not found</div>;\n  }\n\n  return (\n    <Container>\n      <Typography variant=\"h4\">{pathways[id].title} Pathway</Typography>\n      <List>\n        {reorderedSteps.map((step, index) => (\n          <Draggable\n            key={index}\n            onStop={(event, data) => onDragEnd(data, index)}\n            defaultPosition={{ x: 0, y: 0 }} // Adjust as needed\n            grid={[10, 10]} // Adjust the grid size for snapping\n          >\n            <div>\n              <Paper elevation={3} style={{ padding: '8px', marginBottom: '8px' }}>\n                <ListItem>\n                  <ListItemText primary={`${index + 1}. ${step}`} />\n                </ListItem>\n              </Paper>\n            </div>\n          </Draggable>\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default PreDefinedPath;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}