{"ast":null,"code":"var _jsxFileName = \"/Users/abdabthecreator/Documents/undefined-app/src/components/PreDefinedPath.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreDefinedPath = ({\n  pathways\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n\n  // Find the selected pathway by id\n  const selectedPathway = pathways.find(pathway => pathway.id === id);\n\n  // Check if the selected pathway is not found\n  if (!selectedPathway) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Pathway not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Initialize the state with the initial order of steps\n  const [steps, setSteps] = useState(selectedPathway.steps.map((step, index) => ({\n    id: index,\n    content: step\n  })));\n\n  // Function to handle the drag-and-drop end event\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    // Reorder the steps based on the drag-and-drop result\n    const newSteps = [...steps];\n    const [movedStep] = newSteps.splice(result.source.index, 1);\n    newSteps.splice(result.destination.index, 0, movedStep);\n\n    // Update the state with the new order\n    setSteps(newSteps);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [selectedPathway.title, \" Pathway\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"step\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"step\",\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: step.id.toString(),\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: step.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this)\n          }, step.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(PreDefinedPath, \"MqBLMH712fpBLNuOkk6Ns0nKOJw=\", false, function () {\n  return [useParams];\n});\n_c = PreDefinedPath;\nexport default PreDefinedPath;\nvar _c;\n$RefreshReg$(_c, \"PreDefinedPath\");","map":{"version":3,"names":["React","useState","Container","Typography","List","ListItem","ListItemText","Divider","useParams","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","PreDefinedPath","pathways","_s","id","selectedPathway","find","pathway","children","fileName","_jsxFileName","lineNumber","columnNumber","steps","setSteps","map","step","index","content","onDragEnd","result","destination","newSteps","movedStep","splice","source","title","droppableId","provided","className","droppableProps","ref","innerRef","draggableId","toString","draggableProps","dragHandleProps","_c","$RefreshReg$"],"sources":["/Users/abdabthecreator/Documents/undefined-app/src/components/PreDefinedPath.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst PreDefinedPath = ({ pathways }) => {\n  const { id } = useParams();\n\n  // Find the selected pathway by id\n  const selectedPathway = pathways.find(pathway => pathway.id === id);\n\n  // Check if the selected pathway is not found\n  if (!selectedPathway) {\n    return <div>Pathway not found</div>;\n  }\n\n  // Initialize the state with the initial order of steps\n  const [steps, setSteps] = useState(selectedPathway.steps.map((step, index) => ({ id: index, content: step })));\n\n  // Function to handle the drag-and-drop end event\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    // Reorder the steps based on the drag-and-drop result\n    const newSteps = [...steps];\n    const [movedStep] = newSteps.splice(result.source.index, 1);\n    newSteps.splice(result.destination.index, 0, movedStep);\n\n    // Update the state with the new order\n    setSteps(newSteps);\n  };\n\n  return (\n    <div>\n      <h2>{selectedPathway.title} Pathway</h2>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"step\">\n          {(provided) => (\n            <ul className=\"step\" {...provided.droppableProps} ref={provided.innerRef}>\n              {steps.map((step, index) => (\n                <Draggable key={step.id} draggableId={step.id.toString()} index={index}>\n                  {(provided) => (\n                    <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                      <p>{step.content}</p>\n                    </li>\n                  )}\n                </Draggable>\n              ))}\n            </ul>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default PreDefinedPath;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}