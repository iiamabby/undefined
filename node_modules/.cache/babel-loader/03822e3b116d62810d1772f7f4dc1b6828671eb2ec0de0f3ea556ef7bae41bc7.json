{"ast":null,"code":"var _jsxFileName = \"/Users/abdabthecreator/Documents/undefined-app/src/components/PreDefinedPath.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreDefinedPath = ({\n  pathways\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [reorderedSteps, setReorderedSteps] = useState(pathways[id]);\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    const items = Array.from(characters);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    updateCharacters(items);\n  }\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleOnDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"characters\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"characters\",\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [characters.map(({\n          id,\n          name,\n          thumb\n        }, index) => {\n          return /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"characters-thumb\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: thumb,\n                  alt: `${name} Thumb`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 25\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this);\n        }), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(PreDefinedPath, \"tL55YYwg/JOMoUOAm7sLjVU1cyQ=\", false, function () {\n  return [useParams];\n});\n_c = PreDefinedPath;\nexport default PreDefinedPath;\nvar _c;\n$RefreshReg$(_c, \"PreDefinedPath\");","map":{"version":3,"names":["React","useState","Container","Typography","List","ListItem","ListItemText","Divider","useParams","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","PreDefinedPath","pathways","_s","id","reorderedSteps","setReorderedSteps","handleOnDragEnd","result","destination","items","Array","from","characters","reorderedItem","splice","source","index","updateCharacters","onDragEnd","children","droppableId","provided","className","droppableProps","ref","innerRef","map","name","thumb","draggableId","draggableProps","dragHandleProps","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c","$RefreshReg$"],"sources":["/Users/abdabthecreator/Documents/undefined-app/src/components/PreDefinedPath.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst PreDefinedPath = ({ pathways }) => {\n  const { id } = useParams();\n  const [reorderedSteps, setReorderedSteps] = useState(pathways[id]);\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n\n    const items = Array.from(characters);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateCharacters(items);\n  }\n\n  return (\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"characters\">\n            {(provided) => (\n              <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\n                {characters.map(({id, name, thumb}, index) => {\n                  return (\n                    <Draggable key={id} draggableId={id} index={index}>\n                      {(provided) => (\n                        <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                          <div className=\"characters-thumb\">\n                            <img src={thumb} alt={`${name} Thumb`} />\n                          </div>\n                          <p>\n                            { name }\n                          </p>\n                        </li>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </ul>\n            )}\n          </Droppable>\n        </DragDropContext>\n  );\n};\n\nexport default PreDefinedPath;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AAC5F,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAACc,QAAQ,CAACE,EAAE,CAAC,CAAC;EAClE,SAASG,eAAeA,CAACC,MAAM,EAAE;IAC/B,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;IAEzB,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACC,UAAU,CAAC;IACpC,MAAM,CAACC,aAAa,CAAC,GAAGJ,KAAK,CAACK,MAAM,CAACP,MAAM,CAACQ,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;IAC5DP,KAAK,CAACK,MAAM,CAACP,MAAM,CAACC,WAAW,CAACQ,KAAK,EAAE,CAAC,EAAEH,aAAa,CAAC;IAExDI,gBAAgB,CAACR,KAAK,CAAC;EACzB;EAEA,oBACMV,OAAA,CAACJ,eAAe;IAACuB,SAAS,EAAEZ,eAAgB;IAAAa,QAAA,eAC1CpB,OAAA,CAACH,SAAS;MAACwB,WAAW,EAAC,YAAY;MAAAD,QAAA,EAC/BE,QAAQ,iBACRtB,OAAA;QAAIuB,SAAS,EAAC,YAAY;QAAA,GAAKD,QAAQ,CAACE,cAAc;QAAEC,GAAG,EAAEH,QAAQ,CAACI,QAAS;QAAAN,QAAA,GAC5EP,UAAU,CAACc,GAAG,CAAC,CAAC;UAACvB,EAAE;UAAEwB,IAAI;UAAEC;QAAK,CAAC,EAAEZ,KAAK,KAAK;UAC5C,oBACEjB,OAAA,CAACF,SAAS;YAAUgC,WAAW,EAAE1B,EAAG;YAACa,KAAK,EAAEA,KAAM;YAAAG,QAAA,EAC9CE,QAAQ,iBACRtB,OAAA;cAAIyB,GAAG,EAAEH,QAAQ,CAACI,QAAS;cAAA,GAAKJ,QAAQ,CAACS,cAAc;cAAA,GAAMT,QAAQ,CAACU,eAAe;cAAAZ,QAAA,gBACnFpB,OAAA;gBAAKuB,SAAS,EAAC,kBAAkB;gBAAAH,QAAA,eAC/BpB,OAAA;kBAAKiC,GAAG,EAAEJ,KAAM;kBAACK,GAAG,EAAG,GAAEN,IAAK;gBAAQ;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtC,CAAC,eACNtC,OAAA;gBAAAoB,QAAA,EACIQ;cAAI;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UACL,GAValC,EAAE;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWP,CAAC;QAEhB,CAAC,CAAC,EACDhB,QAAQ,CAACiB,WAAW;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE1B,CAAC;AAACnC,EAAA,CAxCIF,cAAc;EAAA,QACHN,SAAS;AAAA;AAAA6C,EAAA,GADpBvC,cAAc;AA0CpB,eAAeA,cAAc;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}