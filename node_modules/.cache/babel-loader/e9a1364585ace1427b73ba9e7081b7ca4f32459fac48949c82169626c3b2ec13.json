{"ast":null,"code":"var _jsxFileName = \"/Users/abdabthecreator/Documents/undefined-app/src/components/PreDefinedPath.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, Divider, Box, Accordion, AccordionSummary, AccordionDetails, Tabs, Tab } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PreDefinedPath = ({\n  pathways\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [list, setList] = useState(pathways[id].steps); // Initialize list state\n  const [expandedItem, setExpandedItem] = useState(null); // Track the expanded item\n\n  const dragItem = useRef();\n  const dragOverItem = useRef();\n  const dragStart = (e, position) => {\n    dragItem.current = position;\n    console.log(e.target.innerHTML);\n  };\n  const dragEnter = (e, position) => {\n    dragOverItem.current = position;\n    console.log(e.target.innerHTML);\n  };\n  const drop = e => {\n    const copyListItems = [...list]; // Use the list state instead of pathways[id].steps\n    const dragItemContent = copyListItems[dragItem.current];\n    copyListItems.splice(dragItem.current, 1);\n    copyListItems.splice(dragOverItem.current, 0, dragItemContent);\n    dragItem.current = null;\n    dragOverItem.current = null;\n    setList(copyListItems); // Update the list state\n  };\n\n  const toggleDetails = itemIndex => {\n    // Toggle the expanded item between open and closed\n    if (expandedItem === itemIndex) {\n      setExpandedItem(null); // Collapse if already expanded\n    } else {\n      setExpandedItem(itemIndex); // Expand if not expanded\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#9CBBE9',\n        color: 'white',\n        padding: '20px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: pathways[id].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pathways[id].desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average Pay: $\", pathways[id].pay]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: list.map((item, index) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            backgroundColor: 'white',\n            // Set the default background color to white\n            boxShadow: '0px 0px 5px rgba(0, 0, 0, 0.3)',\n            // Add a box shadow\n            transition: 'background-color 0.3s',\n            // Add a smooth transition for background color\n            '&:hover': {\n              backgroundColor: '#FFCCB6' // Change background color on hover\n            },\n\n            margin: '20px',\n            cursor: 'pointer',\n            // Add cursor pointer to indicate items are clickable\n            border: expandedItem === index ? '2px solid #FAC8A8' : '2px solid transparent',\n            // Highlight expanded item\n            display: 'flex',\n            // Use flex layout for the container\n            flexDirection: 'column',\n            // Stack items vertically\n            alignItems: 'center',\n            // Center items horizontally\n            padding: '10px',\n            // Add padding for spacing\n            textAlign: 'left' // Center text\n          },\n\n          onDragStart: e => dragStart(e, index),\n          onDragEnter: e => dragEnter(e, index),\n          onDragEnd: drop,\n          draggable: true,\n          onClick: () => toggleDetails(index) // Handle click to toggle details\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              marginBottom: '10px'\n            },\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), \" \", item.content, /*#__PURE__*/_jsxDEV(Accordion, {\n            expanded: expandedItem === index,\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 31\n              }, this),\n              onClick: e => {\n                e.stopPropagation(); // Prevent click on the summary from triggering item click\n                toggleDetails(index); // Toggle details when clicking on the summary\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Skills You'll Gain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"skills-list\",\n                children: item.skills && item.skills.map((skill, skillIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: skill.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 23\n                  }, this), \": \", skill.description, \" (\", skill.type, \")\"]\n                }, skillIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PreDefinedPath, \"9LZKy4u+GavKVJxr1mS7dYkBZe4=\", false, function () {\n  return [useParams];\n});\n_c = PreDefinedPath;\nexport default PreDefinedPath;\nvar _c;\n$RefreshReg$(_c, \"PreDefinedPath\");","map":{"version":3,"names":["React","useState","useRef","Container","Typography","List","ListItem","ListItemText","Divider","Box","Accordion","AccordionSummary","AccordionDetails","Tabs","Tab","useParams","ExpandMoreIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","PreDefinedPath","pathways","_s","id","list","setList","steps","expandedItem","setExpandedItem","dragItem","dragOverItem","dragStart","e","position","current","console","log","target","innerHTML","dragEnter","drop","copyListItems","dragItemContent","splice","toggleDetails","itemIndex","children","style","backgroundColor","color","padding","textAlign","title","fileName","_jsxFileName","lineNumber","columnNumber","desc","pay","display","flex","map","item","index","sx","boxShadow","transition","margin","cursor","border","flexDirection","alignItems","onDragStart","onDragEnter","onDragEnd","draggable","onClick","marginBottom","content","expanded","expandIcon","stopPropagation","variant","className","skills","skill","skillIndex","name","description","type","_c","$RefreshReg$"],"sources":["/Users/abdabthecreator/Documents/undefined-app/src/components/PreDefinedPath.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, Divider, Box, Accordion, AccordionSummary, AccordionDetails, Tabs, Tab } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nconst PreDefinedPath = ({ pathways }) => {\n  const { id } = useParams();\n  const [list, setList] = useState(pathways[id].steps); // Initialize list state\n  const [expandedItem, setExpandedItem] = useState(null); // Track the expanded item\n\n  const dragItem = useRef();\n  const dragOverItem = useRef();\n\n  const dragStart = (e, position) => {\n    dragItem.current = position;\n    console.log(e.target.innerHTML);\n  };\n\n  const dragEnter = (e, position) => {\n    dragOverItem.current = position;\n    console.log(e.target.innerHTML);\n  };\n\n  const drop = (e) => {\n    const copyListItems = [...list]; // Use the list state instead of pathways[id].steps\n    const dragItemContent = copyListItems[dragItem.current];\n    copyListItems.splice(dragItem.current, 1);\n    copyListItems.splice(dragOverItem.current, 0, dragItemContent);\n    dragItem.current = null;\n    dragOverItem.current = null;\n    setList(copyListItems); // Update the list state\n  };\n\n  const toggleDetails = (itemIndex) => {\n    // Toggle the expanded item between open and closed\n    if (expandedItem === itemIndex) {\n      setExpandedItem(null); // Collapse if already expanded\n    } else {\n      setExpandedItem(itemIndex); // Expand if not expanded\n    }\n  };\n\n  return (\n    <>\n     <div style={{ backgroundColor: '#9CBBE9', color: 'white', padding: '20px', textAlign: 'center' }}>\n        <h1>{pathways[id].title}</h1>\n        <p>{pathways[id].desc}</p>\n        <p>Average Pay: ${pathways[id].pay}</p>\n      </div>\n      <div style={{ display: 'flex' }}>\n        <div style={{ flex: 1 }}>\n          {list.map((item, index) => (\n            <Box\n              sx={{\n                backgroundColor: 'white', // Set the default background color to white\n                boxShadow: '0px 0px 5px rgba(0, 0, 0, 0.3)', // Add a box shadow\n                transition: 'background-color 0.3s', // Add a smooth transition for background color\n                '&:hover': {\n                  backgroundColor: '#FFCCB6', // Change background color on hover\n                },\n                margin: '20px',\n                cursor: 'pointer', // Add cursor pointer to indicate items are clickable\n                border: expandedItem === index ? '2px solid #FAC8A8' : '2px solid transparent', // Highlight expanded item\n                display: 'flex', // Use flex layout for the container\n                flexDirection: 'column', // Stack items vertically\n                alignItems: 'center', // Center items horizontally\n                padding: '10px', // Add padding for spacing\n                textAlign: 'left', // Center text\n              }}\n              key={item.id}\n              onDragStart={(e) => dragStart(e, index)}\n              onDragEnter={(e) => dragEnter(e, index)}\n              onDragEnd={drop}\n              draggable\n              onClick={() => toggleDetails(index)} // Handle click to toggle details\n            >\n              <h1 style={{ marginBottom: '10px' }}>{index + 1}</h1> {/* Add margin to separate h1 from content */}\n              {item.content}\n              <Accordion expanded={expandedItem === index}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  onClick={(e) => {\n                    e.stopPropagation(); // Prevent click on the summary from triggering item click\n                    toggleDetails(index); // Toggle details when clicking on the summary\n                  }}\n                >\n                  <Typography variant=\"h6\">Skills You'll Gain</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                <ul className=\"skills-list\">\n                  {item.skills && item.skills.map((skill, skillIndex) => (\n                    <li key={skillIndex}>\n                      <strong>{skill.name}</strong>: {skill.description} ({skill.type})\n                    </li>\n                  ))}\n                </ul>\n                </AccordionDetails>\n              </Accordion>\n            </Box>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PreDefinedPath;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}