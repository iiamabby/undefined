{"ast":null,"code":"var _jsxFileName = \"/Users/abdabthecreator/Documents/undefined-app/src/pages/PathInfoPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport PathStepBox from '../components/PathStepBox';\nimport { Container, Typography, Paper, Button, Box } from '@mui/material';\n\n// Import your careerData.json here\nimport careerData from '../data/careerData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PathInfoPage = ({\n  pathways\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const updatedList = location.state ? location.state.updatedList : null;\n  const path = pathways[id];\n  const [currentStep, setCurrentStep] = useState(0);\n  const nextStep = () => {\n    if (currentStep < (updatedList || path.steps).length - 1) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n  const prevStep = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  // Function to count items by category in the updatedList\n  const countItemsByCategory = () => {\n    const counts = {};\n    if (updatedList) {\n      updatedList.forEach(item => {\n        const category = item.category; // Replace with the actual property name in your data\n        if (category) {\n          counts[category] = (counts[category] || 0) + 1;\n        }\n      });\n    }\n    return counts;\n  };\n\n  // Function to check if a category has more than 2 items\n  const categoryHasMoreThanTwo = categoryCounts => {\n    return Object.values(categoryCounts).some(count => count > 2);\n  };\n  const steps = updatedList || path.steps;\n  const currentStepContent = steps[currentStep];\n  const categoryCounts = countItemsByCategory();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        padding: 3,\n        marginTop: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: updatedList[0].title ? \"Bespoke Pathway\" : path.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        paragraph: true,\n        children: updatedList[0].title ? \" \" : path.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: updatedList[0].title ? \"Unknown \" : \"Average Pay:\" + path.pay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        marginTop: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: [\"Step \", currentStep + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PathStepBox, {\n          step: currentStepContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginTop: 2,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: prevStep,\n            disabled: currentStep === 0,\n            children: \"Previous Step\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: nextStep,\n            disabled: currentStep === steps.length - 1,\n            children: \"Next Step\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), categoryHasMoreThanTwo(categoryCounts) && /*#__PURE__*/_jsxDEV(Box, {\n      marginTop: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Possible Career Titles and Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), Object.keys(careerData).map(category => {\n        // Check if the category has more than 2 items\n        if (categoryCounts[category] > 2) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              gutterBottom: true,\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this), Object.keys(careerData[category]).map(careerTitle => {\n              const careerInfo = careerData[category][careerTitle];\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: careerInfo.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: [\"Pay: \", careerInfo.pay]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: [\"Courses: \", careerInfo.courses[0].courses[0].course, \" \", careerInfo.courses[0].courses[0].level]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)]\n              }, careerTitle, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this);\n            })]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this);\n        }\n        return null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(PathInfoPage, \"UMKhMYT6Uah93/iNKC0Wb+OOopA=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = PathInfoPage;\nexport default PathInfoPage;\nvar _c;\n$RefreshReg$(_c, \"PathInfoPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","Link","PathStepBox","Container","Typography","Paper","Button","Box","careerData","jsxDEV","_jsxDEV","PathInfoPage","pathways","_s","id","location","updatedList","state","path","currentStep","setCurrentStep","nextStep","steps","length","prevStep","countItemsByCategory","counts","forEach","item","category","categoryHasMoreThanTwo","categoryCounts","Object","values","some","count","currentStepContent","maxWidth","children","elevation","sx","padding","marginTop","variant","gutterBottom","title","fileName","_jsxFileName","lineNumber","columnNumber","paragraph","desc","pay","step","display","justifyContent","color","onClick","disabled","keys","map","careerTitle","careerInfo","courses","course","level","_c","$RefreshReg$"],"sources":["/Users/abdabthecreator/Documents/undefined-app/src/pages/PathInfoPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport PathStepBox from '../components/PathStepBox';\nimport {\n  Container,\n  Typography,\n  Paper,\n  Button,\n  Box,\n} from '@mui/material';\n\n// Import your careerData.json here\nimport careerData from '../data/careerData.json';\n\nconst PathInfoPage = ({ pathways }) => {\n  const { id } = useParams();\n  const location = useLocation();\n  const updatedList = location.state ? location.state.updatedList : null;\n  const path = pathways[id];\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const nextStep = () => {\n    if (currentStep < (updatedList || path.steps).length - 1) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  const prevStep = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  // Function to count items by category in the updatedList\n  const countItemsByCategory = () => {\n    const counts = {};\n\n    if (updatedList) {\n      updatedList.forEach((item) => {\n        const category = item.category; // Replace with the actual property name in your data\n        if (category) {\n          counts[category] = (counts[category] || 0) + 1;\n        }\n      });\n    }\n\n    return counts;\n  };\n\n  // Function to check if a category has more than 2 items\n  const categoryHasMoreThanTwo = (categoryCounts) => {\n    return Object.values(categoryCounts).some((count) => count > 2);\n  };\n\n  const steps = updatedList || path.steps;\n  const currentStepContent = steps[currentStep];\n  const categoryCounts = countItemsByCategory();\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Paper elevation={3} sx={{ padding: 3, marginTop: 2 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          {updatedList[0].title ? \"Bespoke Pathway\" : path.title }\n        </Typography>\n        <Typography variant=\"body1\" paragraph>\n          {updatedList[0].title ? \" \" :  path.desc}\n        </Typography>\n        <Typography variant=\"body1\">\n          { updatedList[0].title ? \"Unknown \" : \"Average Pay:\"+ path.pay}\n        </Typography>\n\n        <Box marginTop={2}>\n          <Typography variant=\"h5\" gutterBottom>\n            Step {currentStep + 1}\n          </Typography>\n          <PathStepBox step={currentStepContent} />\n          <Box display=\"flex\" justifyContent=\"space-between\" marginTop={2}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={prevStep}\n              disabled={currentStep === 0}\n            >\n              Previous Step\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={nextStep}\n              disabled={currentStep === steps.length - 1}\n            >\n              Next Step\n            </Button>\n          </Box>\n        </Box>\n\n\n        \n      </Paper>\n      {categoryHasMoreThanTwo(categoryCounts) && (\n  <Box marginTop={2}>\n    <Typography variant=\"h5\" gutterBottom>\n      Possible Career Titles and Courses\n    </Typography>\n    {Object.keys(careerData).map((category) => {\n      // Check if the category has more than 2 items\n      if (categoryCounts[category] > 2) {\n        return (\n          <div key={category}>\n            <Typography variant=\"h4\" gutterBottom>\n              {category}\n            </Typography>\n            {Object.keys(careerData[category]).map((careerTitle) => {\n              const careerInfo = careerData[category][careerTitle];\n              return (\n                <div key={careerTitle}>\n                  <Typography variant=\"subtitle1\">{careerInfo.title}</Typography>\n                  <Typography variant=\"body1\">\n                    Pay: {careerInfo.pay}\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    Courses: {careerInfo.courses[0].courses[0].course} {careerInfo.courses[0].courses[0].level}\n                  </Typography>\n                </div>\n              );\n            })}\n          </div>\n        );\n      }\n      return null;\n    })}\n  </Box>\n)}\n    </Container>\n  );\n};\n\nexport default PathInfoPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}