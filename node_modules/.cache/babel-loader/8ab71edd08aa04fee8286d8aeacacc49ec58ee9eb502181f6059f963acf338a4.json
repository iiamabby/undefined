{"ast":null,"code":"var _jsxFileName = \"/Users/abdabthecreator/Documents/undefined-app/src/components/PreDefinedPath.jsx\";\nimport React from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreDefinedPathways = ({\n  pathways,\n  id\n}) => {\n  const pathway = pathways[id];\n  if (!pathway) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Pathway not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        marginTop: 4,\n        marginBottom: 2\n      },\n      children: [pathway.title, \" Pathway\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: pathway.steps.map((step, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${index + 1}. ${step}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), index !== pathway.steps.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 52\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = PreDefinedPathways;\nexport default PreDefinedPathways;\nvar _c;\n$RefreshReg$(_c, \"PreDefinedPathways\");","map":{"version":3,"names":["React","Container","Typography","List","ListItem","ListItemText","Divider","jsxDEV","_jsxDEV","PreDefinedPathways","pathways","id","pathway","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","marginTop","marginBottom","title","steps","map","step","index","Fragment","primary","length","_c","$RefreshReg$"],"sources":["/Users/abdabthecreator/Documents/undefined-app/src/components/PreDefinedPath.jsx"],"sourcesContent":["import React from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\n\nconst PreDefinedPathways = ({ pathways, id }) => {\n  const pathway = pathways[id];\n\n  if (!pathway) {\n    return <div>Pathway not found</div>;\n  }\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" sx={{ marginTop: 4, marginBottom: 2 }}>\n        {pathway.title} Pathway\n      </Typography>\n      <List>\n        {pathway.steps.map((step, index) => (\n          <React.Fragment key={index}>\n            <ListItem>\n              <ListItemText primary={`${index + 1}. ${step}`} />\n            </ListItem>\n            {index !== pathway.steps.length - 1 && <Divider />}\n          </React.Fragment>\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default PreDefinedPathways;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7F,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAG,CAAC,KAAK;EAC/C,MAAMC,OAAO,GAAGF,QAAQ,CAACC,EAAE,CAAC;EAE5B,IAAI,CAACC,OAAO,EAAE;IACZ,oBAAOJ,OAAA;MAAAK,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;EAEA,oBACET,OAAA,CAACP,SAAS;IAAAY,QAAA,gBACRL,OAAA,CAACN,UAAU;MAACgB,OAAO,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEC,SAAS,EAAE,CAAC;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAR,QAAA,GAC5DD,OAAO,CAACU,KAAK,EAAC,UACjB;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbT,OAAA,CAACL,IAAI;MAAAU,QAAA,EACFD,OAAO,CAACW,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC7BlB,OAAA,CAACR,KAAK,CAAC2B,QAAQ;QAAAd,QAAA,gBACbL,OAAA,CAACJ,QAAQ;UAAAS,QAAA,eACPL,OAAA,CAACH,YAAY;YAACuB,OAAO,EAAG,GAAEF,KAAK,GAAG,CAAE,KAAID,IAAK;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,EACVS,KAAK,KAAKd,OAAO,CAACW,KAAK,CAACM,MAAM,GAAG,CAAC,iBAAIrB,OAAA,CAACF,OAAO;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAJ/BS,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACa,EAAA,GAxBIrB,kBAAkB;AA0BxB,eAAeA,kBAAkB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}