{"ast":null,"code":"var _jsxFileName = \"/Users/abdabthecreator/Documents/undefined-app/src/components/OptionTab.jsx\";\nimport React from 'react';\nimport { Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptionTab = ({\n  items,\n  onDropInArea,\n  droppedItemTitles\n}) => {\n  const onDragStartHandler = (e, item) => {\n    // Set the item's title as text/plain during drag\n    e.dataTransfer.setData('text/plain', item.title);\n  };\n  const onDragOverHandler = e => {\n    e.preventDefault();\n  };\n  const onDropHandler = (e, item) => {\n    e.preventDefault();\n    const droppedItemTitle = e.dataTransfer.getData('text/plain');\n    console.log('Dropped item title:', droppedItemTitle);\n    onDropInArea(droppedItemTitle); // Pass the title of the dropped item\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      overflowX: 'scroll',\n      whiteSpace: 'nowrap'\n    },\n    onDragOver: onDragOverHandler,\n    onDrop: e => onDropHandler(e, items),\n    children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '30%',\n        height: '100%',\n        border: '1px solid #ccc',\n        padding: '10px',\n        marginRight: '10px',\n        display: 'inline-block',\n        verticalAlign: 'top',\n        overflow: 'hidden',\n        position: 'relative' // Required for the overlay\n      },\n\n      onDragStart: e => onDragStartHandler(e, item),\n      draggable: !droppedItemTitles.includes(item.title) // Disable dragging if in dropped list\n      ,\n      children: [droppedItemTitles.includes(item.title) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          backgroundColor: 'rgba(128, 128, 128, 0.3)',\n          // Grey overlay with reduced opacity\n          zIndex: 1 // Ensure the overlay doesn't interfere with dragging\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = OptionTab;\nexport default OptionTab;\nvar _c;\n$RefreshReg$(_c, \"OptionTab\");","map":{"version":3,"names":["React","Typography","jsxDEV","_jsxDEV","OptionTab","items","onDropInArea","droppedItemTitles","onDragStartHandler","e","item","dataTransfer","setData","title","onDragOverHandler","preventDefault","onDropHandler","droppedItemTitle","getData","console","log","style","width","overflowX","whiteSpace","onDragOver","onDrop","children","map","height","border","padding","marginRight","display","verticalAlign","overflow","position","onDragStart","draggable","includes","top","left","backgroundColor","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","variant","description","id","_c","$RefreshReg$"],"sources":["/Users/abdabthecreator/Documents/undefined-app/src/components/OptionTab.jsx"],"sourcesContent":["import React from 'react';\nimport { Typography } from '@mui/material';\n\nconst OptionTab = ({ items, onDropInArea, droppedItemTitles }) => {\n  const onDragStartHandler = (e, item) => {\n    // Set the item's title as text/plain during drag\n    e.dataTransfer.setData('text/plain', item.title);\n  };\n\n  const onDragOverHandler = (e) => {\n    e.preventDefault();\n  };\n\n  const onDropHandler = (e, item) => {\n    e.preventDefault();\n    const droppedItemTitle = e.dataTransfer.getData('text/plain');\n    console.log('Dropped item title:', droppedItemTitle);\n    onDropInArea(droppedItemTitle); // Pass the title of the dropped item\n  };\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        overflowX: 'scroll',\n        whiteSpace: 'nowrap',\n      }}\n      onDragOver={onDragOverHandler}\n      onDrop={(e) => onDropHandler(e, items)}\n    >\n      {items.map((item) => (\n        <div\n          key={item.id}\n          style={{\n            width:'30%',\n            height:'100%',\n            border: '1px solid #ccc',\n            padding: '10px',\n            marginRight: '10px',\n            display: 'inline-block',\n            verticalAlign: 'top',\n            overflow:'hidden',\n            position: 'relative', // Required for the overlay\n          }}\n          onDragStart={(e) => onDragStartHandler(e, item)}\n          draggable={!droppedItemTitles.includes(item.title)} // Disable dragging if in dropped list\n        >\n          {droppedItemTitles.includes(item.title) && (\n            <div\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                backgroundColor: 'rgba(128, 128, 128, 0.3)', // Grey overlay with reduced opacity\n                zIndex: 1, // Ensure the overlay doesn't interfere with dragging\n              }}\n            ></div>\n          )}\n          <Typography variant=\"h6\">{item.title}</Typography>\n          <Typography variant=\"body1\">{item.description}</Typography>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default OptionTab;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}