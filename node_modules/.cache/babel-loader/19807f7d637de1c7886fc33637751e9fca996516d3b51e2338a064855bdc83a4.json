{"ast":null,"code":"var _jsxFileName = \"/Users/abdabthecreator/Documents/undefined-app/src/components/PreDefinedPath.jsx\";\nimport React from 'react';\nimport Draggable from 'react-draggable';\nimport { Container, Typography, List, ListItem, ListItemText, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreDefinedPath = ({\n  pathways\n}) => {\n  // Assuming `pathways` is an array of tech paths\n  const techPath = pathways.techPaths[0]; // Change this if you have multiple tech paths\n\n  if (!techPath) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No tech path found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: [techPath.title, \" Pathway\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: techPath.steps.map((step, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          style: {\n            padding: '8px',\n            marginBottom: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `${index + 1}. ${step}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = PreDefinedPath;\nexport default PreDefinedPath;\nvar _c;\n$RefreshReg$(_c, \"PreDefinedPath\");","map":{"version":3,"names":["React","Draggable","Container","Typography","List","ListItem","ListItemText","Paper","jsxDEV","_jsxDEV","PreDefinedPath","pathways","techPath","techPaths","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","title","steps","map","step","index","elevation","style","padding","marginBottom","primary","_c","$RefreshReg$"],"sources":["/Users/abdabthecreator/Documents/undefined-app/src/components/PreDefinedPath.jsx"],"sourcesContent":["import React from 'react';\nimport Draggable from 'react-draggable';\nimport { Container, Typography, List, ListItem, ListItemText, Paper } from '@mui/material';\n\nconst PreDefinedPath = ({ pathways }) => {\n  // Assuming `pathways` is an array of tech paths\n  const techPath = pathways.techPaths[0]; // Change this if you have multiple tech paths\n\n  if (!techPath) {\n    return <div>No tech path found</div>;\n  }\n\n  return (\n    <Container>\n      <Typography variant=\"h4\">{techPath.title} Pathway</Typography>\n      <List>\n        {techPath.steps.map((step, index) => (\n          <Draggable key={index}>\n            <Paper elevation={3} style={{ padding: '8px', marginBottom: '8px' }}>\n              <ListItem>\n                <ListItemText primary={`${index + 1}. ${step}`} />\n              </ListItem>\n            </Paper>\n          </Draggable>\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default PreDefinedPath;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,iBAAiB;AACvC,SAASC,SAAS,EAAEC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3F,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC;EACA,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;;EAExC,IAAI,CAACD,QAAQ,EAAE;IACb,oBAAOH,OAAA;MAAAK,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;EAEA,oBACET,OAAA,CAACP,SAAS;IAAAY,QAAA,gBACRL,OAAA,CAACN,UAAU;MAACgB,OAAO,EAAC,IAAI;MAAAL,QAAA,GAAEF,QAAQ,CAACQ,KAAK,EAAC,UAAQ;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC9DT,OAAA,CAACL,IAAI;MAAAU,QAAA,EACFF,QAAQ,CAACS,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9Bf,OAAA,CAACR,SAAS;QAAAa,QAAA,eACRL,OAAA,CAACF,KAAK;UAACkB,SAAS,EAAE,CAAE;UAACC,KAAK,EAAE;YAAEC,OAAO,EAAE,KAAK;YAAEC,YAAY,EAAE;UAAM,CAAE;UAAAd,QAAA,eAClEL,OAAA,CAACJ,QAAQ;YAAAS,QAAA,eACPL,OAAA,CAACH,YAAY;cAACuB,OAAO,EAAG,GAAEL,KAAK,GAAG,CAAE,KAAID,IAAK;YAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC,GALMM,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACY,EAAA,GAxBIpB,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}