{"ast":null,"code":"var _jsxFileName = \"/Users/abdabthecreator/Documents/undefined-app/src/components/OptionTab.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptionTab = () => {\n  _s();\n  const items = ['test1', 'test2', 'test3'];\n  const [list, setList] = useState(items);\n  const dragStartHandler = (e, position) => {\n    e.dataTransfer.setData('text/plain', position.toString());\n  };\n  const dragOverHandler = e => {\n    e.preventDefault();\n  };\n  const dropHandler = e => {\n    e.preventDefault();\n    const newPosition = list.length; // Insert at the end by default\n\n    // Get the X coordinate of the drop event relative to the OptionTab container\n    const dropX = e.clientX - e.target.getBoundingClientRect().left;\n\n    // Calculate the position based on the X coordinate\n    list.forEach((item, index) => {\n      const itemWidth = 170; // Adjust this value as needed\n      const itemOffset = index * itemWidth;\n      if (dropX >= itemOffset && dropX <= itemOffset + itemWidth) {\n        newPosition = index;\n      }\n    });\n    const copyListItems = [...list];\n    const [draggedItem] = copyListItems.splice(newPosition, 1);\n    copyListItems.splice(newPosition, 0, draggedItem);\n    setList(copyListItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      overflowX: 'auto',\n      whiteSpace: 'nowrap' // Prevent items from wrapping to the next line\n    },\n\n    onDragOver: dragOverHandler,\n    onDrop: dropHandler,\n    children: list.map((item, index) => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minWidth: '150px',\n        border: '1px solid #ccc',\n        padding: '10px',\n        marginRight: '10px',\n        display: 'inline-block',\n        // Display items inline\n        verticalAlign: 'top' // Align items vertically at the top\n      },\n\n      onDragStart: e => dragStartHandler(e, index),\n      draggable: true,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(OptionTab, \"LA5pJI1oB2RHBQAmrDJfac4M10g=\");\n_c = OptionTab;\nexport default OptionTab;\nvar _c;\n$RefreshReg$(_c, \"OptionTab\");","map":{"version":3,"names":["React","useState","Box","Typography","jsxDEV","_jsxDEV","OptionTab","_s","items","list","setList","dragStartHandler","e","position","dataTransfer","setData","toString","dragOverHandler","preventDefault","dropHandler","newPosition","length","dropX","clientX","target","getBoundingClientRect","left","forEach","item","index","itemWidth","itemOffset","copyListItems","draggedItem","splice","style","display","width","overflowX","whiteSpace","onDragOver","onDrop","children","map","sx","minWidth","border","padding","marginRight","verticalAlign","onDragStart","draggable","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abdabthecreator/Documents/undefined-app/src/components/OptionTab.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography } from '@mui/material';\n\nconst OptionTab = () => {\n  const items = ['test1', 'test2', 'test3'];\n  const [list, setList] = useState(items);\n\n  const dragStartHandler = (e, position) => {\n    e.dataTransfer.setData('text/plain', position.toString());\n  };\n\n  const dragOverHandler = (e) => {\n    e.preventDefault();\n  };\n\n  const dropHandler = (e) => {\n    e.preventDefault();\n    const newPosition = list.length; // Insert at the end by default\n  \n    // Get the X coordinate of the drop event relative to the OptionTab container\n    const dropX = e.clientX - e.target.getBoundingClientRect().left;\n  \n    // Calculate the position based on the X coordinate\n    list.forEach((item, index) => {\n      const itemWidth = 170; // Adjust this value as needed\n      const itemOffset = index * itemWidth;\n      if (dropX >= itemOffset && dropX <= itemOffset + itemWidth) {\n        newPosition = index;\n      }\n    });\n  \n    const copyListItems = [...list];\n    const [draggedItem] = copyListItems.splice(newPosition, 1);\n    copyListItems.splice(newPosition, 0, draggedItem);\n    setList(copyListItems);\n  };\n  \n\n  return (\n    <div\n  style={{\n    display: 'flex',\n    width: '100%',\n    overflowX: 'auto',\n    whiteSpace: 'nowrap', // Prevent items from wrapping to the next line\n  }}\n  onDragOver={dragOverHandler}\n  onDrop={dropHandler}\n>\n  {list.map((item, index) => (\n    <Box\n      key={item}\n      sx={{\n        minWidth: '150px',\n        border: '1px solid #ccc',\n        padding: '10px',\n        marginRight: '10px',\n        display: 'inline-block', // Display items inline\n        verticalAlign: 'top', // Align items vertically at the top\n      }}\n      onDragStart={(e) => dragStartHandler(e, index)}\n      draggable\n    >\n      <Typography variant=\"h6\">{item}</Typography>\n    </Box>\n  ))}\n</div>\n\n  );\n};\n\nexport default OptionTab;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}