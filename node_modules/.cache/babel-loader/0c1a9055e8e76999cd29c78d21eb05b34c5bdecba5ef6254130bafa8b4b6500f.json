{"ast":null,"code":"var _jsxFileName = \"/Users/abdabthecreator/Documents/undefined-app/src/components/OptionTab.jsx\";\nimport React from 'react';\nimport { Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptionTab = ({\n  items,\n  onDropInArea\n}) => {\n  const onDragStartHandler = (e, item) => {\n    // Set the item's title as text/plain during drag\n    e.dataTransfer.setData('text/plain', item.title);\n  };\n  const onDragOverHandler = e => {\n    e.preventDefault();\n  };\n  const onDropHandler = (e, item) => {\n    e.preventDefault();\n    const droppedItemTitle = e.dataTransfer.getData('text/plain');\n    console.log('Dropped item title:', droppedItemTitle);\n    onDropInArea(droppedItemTitle); // Pass the title of the dropped item\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      whiteSpace: 'nowrap'\n    },\n    onDragOver: onDragOverHandler,\n    onDrop: e => onDropHandler(e, items) // Pass the items to the onDropHandler\n    ,\n    children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minWidth: '150px',\n        border: '1px solid #ccc',\n        padding: '10px',\n        marginRight: '10px',\n        display: 'inline-block',\n        verticalAlign: 'top'\n      },\n      onDragStart: e => onDragStartHandler(e, item),\n      draggable: true,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = OptionTab;\nexport default OptionTab;\nvar _c;\n$RefreshReg$(_c, \"OptionTab\");","map":{"version":3,"names":["React","Typography","jsxDEV","_jsxDEV","OptionTab","items","onDropInArea","onDragStartHandler","e","item","dataTransfer","setData","title","onDragOverHandler","preventDefault","onDropHandler","droppedItemTitle","getData","console","log","style","display","width","whiteSpace","onDragOver","onDrop","children","map","index","minWidth","border","padding","marginRight","verticalAlign","onDragStart","draggable","variant","fileName","_jsxFileName","lineNumber","columnNumber","description","id","_c","$RefreshReg$"],"sources":["/Users/abdabthecreator/Documents/undefined-app/src/components/OptionTab.jsx"],"sourcesContent":["import React from 'react';\nimport { Typography } from '@mui/material';\n\nconst OptionTab = ({ items, onDropInArea }) => {\n  const onDragStartHandler = (e, item) => {\n    // Set the item's title as text/plain during drag\n    e.dataTransfer.setData('text/plain', item.title);\n  };\n\n  const onDragOverHandler = (e) => {\n    e.preventDefault();\n  };\n\n  const onDropHandler = (e, item) => {\n    e.preventDefault();\n    const droppedItemTitle = e.dataTransfer.getData('text/plain');\n    console.log('Dropped item title:', droppedItemTitle);\n    onDropInArea(droppedItemTitle); // Pass the title of the dropped item\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        width: '100%',\n        whiteSpace: 'nowrap',\n      }}\n      onDragOver={onDragOverHandler}\n      onDrop={(e) => onDropHandler(e, items)} // Pass the items to the onDropHandler\n    >\n      {items.map((item, index) => (\n        <div\n          key={item.id}\n          style={{\n            minWidth: '150px',\n            border: '1px solid #ccc',\n            padding: '10px',\n            marginRight: '10px',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n          onDragStart={(e) => onDragStartHandler(e, item)}\n          draggable\n        >\n          <Typography variant=\"h6\">{item.title}</Typography>\n          <Typography variant=\"body1\">{item.description}</Typography>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default OptionTab;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAa,CAAC,KAAK;EAC7C,MAAMC,kBAAkB,GAAGA,CAACC,CAAC,EAAEC,IAAI,KAAK;IACtC;IACAD,CAAC,CAACE,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEF,IAAI,CAACG,KAAK,CAAC;EAClD,CAAC;EAED,MAAMC,iBAAiB,GAAIL,CAAC,IAAK;IAC/BA,CAAC,CAACM,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,MAAMC,aAAa,GAAGA,CAACP,CAAC,EAAEC,IAAI,KAAK;IACjCD,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,MAAME,gBAAgB,GAAGR,CAAC,CAACE,YAAY,CAACO,OAAO,CAAC,YAAY,CAAC;IAC7DC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,gBAAgB,CAAC;IACpDV,YAAY,CAACU,gBAAgB,CAAC,CAAC,CAAC;EAClC,CAAC;;EAED,oBACEb,OAAA;IACEiB,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,KAAK,EAAE,MAAM;MACbC,UAAU,EAAE;IACd,CAAE;IACFC,UAAU,EAAEX,iBAAkB;IAC9BY,MAAM,EAAGjB,CAAC,IAAKO,aAAa,CAACP,CAAC,EAAEH,KAAK,CAAE,CAAC;IAAA;IAAAqB,QAAA,EAEvCrB,KAAK,CAACsB,GAAG,CAAC,CAAClB,IAAI,EAAEmB,KAAK,kBACrBzB,OAAA;MAEEiB,KAAK,EAAE;QACLS,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE,gBAAgB;QACxBC,OAAO,EAAE,MAAM;QACfC,WAAW,EAAE,MAAM;QACnBX,OAAO,EAAE,cAAc;QACvBY,aAAa,EAAE;MACjB,CAAE;MACFC,WAAW,EAAG1B,CAAC,IAAKD,kBAAkB,CAACC,CAAC,EAAEC,IAAI,CAAE;MAChD0B,SAAS;MAAAT,QAAA,gBAETvB,OAAA,CAACF,UAAU;QAACmC,OAAO,EAAC,IAAI;QAAAV,QAAA,EAAEjB,IAAI,CAACG;MAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAClDrC,OAAA,CAACF,UAAU;QAACmC,OAAO,EAAC,OAAO;QAAAV,QAAA,EAAEjB,IAAI,CAACgC;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA,GAbtD/B,IAAI,CAACiC,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcT,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACG,EAAA,GA/CIvC,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}